services:
  # RabbitMQ Service
  rabbitmq:
    image: "rabbitmq:3-management"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672" # RabbitMQ AMQP port
      - "15672:15672" # RabbitMQ management UI

  # MongoDB Service
  mongodb:
    image: "mongo:latest"
    ports:
      - "27017:27017" # MongoDB port
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb_data:/data/db # Persistent storage for MongoDB

  # Orch Service
  orch_service:
    build: ./orch_service
    ports:
      - "5003:5003"
    environment:
      - DAPR_HTTP_PORT=3500
    depends_on:
      - rabbitmq
    volumes:
      - ./orch_service/components:/app/components # Mount components directory

  # User Service
  user_service:
    build: ./user_service
    ports:
      - "5000:5000"
    environment:
      - DAPR_HTTP_PORT=3500
      - MONGO_URI=mongodb://root:example@mongodb:27017
    depends_on:
      - mongodb # User service needs MongoDB
    volumes:
      - ./user_service/components:/app/components # Mount components directory

  # News Aggregation Service
  news_aggregation_service:
    build: ./news_aggregation_service
    ports:
      - "5001:5001"
    environment:
      - DAPR_HTTP_PORT=3500
    volumes:
      - ./news_aggregation_service/components:/app/components # Mount components directory

  # Notification Service
  notification_service:
    build: ./notification_service
    ports:
      - "5002:5002"
    environment:
      - DAPR_HTTP_PORT=3500
    depends_on:
      - rabbitmq # Assuming it depends on RabbitMQ
    volumes:
      - ./notification_service/components:/app/components # Mount components directory

volumes:
  mongodb_data: # Persistent storage for MongoDB
